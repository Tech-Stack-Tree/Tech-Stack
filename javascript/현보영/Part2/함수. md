
## Part2 
## 연산자

### 논리 연산자
- AND 연산자 &&
- OR 연산자 ||
- NOT 연산자 !
  
### 삼항 연산자
- if나 switch처럼 조건문을 처리하는 연산자
- if 조건문의 축약형으로 사용되며 세개의 문장으로 구성됨

```js
조건문? 표현문1 : 표현문2
```

### 형변환
- 숫자형에서 문자헝으로 변환하거나, 문자형 변수 값을 숫자형으로 변환
`typeof`로 값의 자료형 확인

<br>

### 배열
```js
[] // 빈배열
[ 1, 3, 4, 5 ] 
```
- 배열 내부의 특정 위치에 있는 요소로 바로 접근할 때는 인덱스가 반드시 필요
- 인덱스 : 배열 안에 위치한 좌표
```js
var arr = [ 1, 2, 3, 4, 5 ]
console.log(arr.length)
console.log(arr[0])
```


### 함수 형식
- 함수 표현식과 함수 선언문
```js
function 함수 이름 (매개변수 목록) {
  함수 실행부
}
```

### 예외처리
1. throw 문
- 개발자가 의도한 에러
2. try-catch-finally
- 개발자가 예상치 못한 에러
```js
function checkNumber(val){
    if (typeof val !== 'number') throw '유효하지 않은 값입니다.';
    console.log('숫자형 값으로 확인되었습니다.');
}

try {
    checkNumber(100);
    checkNumber('Wrong type');
} catch(e) {
    console.log('에러가 발생했습니다 >>> ${e}');
} finally {
    console.log('완료');
}
```
